// CSS Reset
@import "reset.less";
// Core variables and mixins
@import "variables.less"; // Modify this for custom colors, font-sizes, etc
@import "mixins.less";

@import "type.less";

@import "patterns.less";
@import "forms.less";

.clear-fix{
  .clearfix();
}

body {
  background: @white url('../img/bg.png');
  margin: 0;
  #font > .sans-serif(normal,@basefont,@baseline);
  color: @grayDark;
}

// Links
a {
  color: @linkColor;
  text-decoration: none;
  line-height: inherit;
  font-weight: inherit;
  &:hover {
    color: @linkColorHover;
    text-decoration: underline;
  }
}

// Quick floats
.pull-right {
  float: right;
}
.pull-left {
  float: left;
}

// Toggling content
.hide {
  display: none;
}
.show {
  display: block;
}


// GRID SYSTEM
// -----------
// To customize the grid system, bring up the variables.less file and change the column count, size, and gutter there

.row {
  .clearfix();
  margin-left: -@gridGutterWidth;
}

// Find all .span# classes within .row and give them the necessary properties for grid columns (supported by all browsers back to IE7)
// Credit to @dhg for the idea
.row > [class*="span"] {
  .gridColumn();
}

// Default columns
.span1     { .columns(1); }
.span2     { .columns(2); }
.span3     { .columns(3); }
.span4     { .columns(4); }
.span5     { .columns(5); }
.span6     { .columns(6); }
.span7     { .columns(7); }
.span8     { .columns(8); }
.span9     { .columns(9); }
.span10    { .columns(10); }
.span11    { .columns(11); }
.span12    { .columns(12); }
.span13    { .columns(13); }
.span14    { .columns(14); }
.span15    { .columns(15); }
.span16    { .columns(16); }

// For optional 24-column grid
.span17    { .columns(17); }
.span18    { .columns(18); }
.span19    { .columns(19); }
.span20    { .columns(20); }
.span21    { .columns(21); }
.span22    { .columns(22); }
.span23    { .columns(23); }
.span24    { .columns(24); }

// Offset column options
.row {
  > .offset1   { .offset(1); }
  > .offset2   { .offset(2); }
  > .offset3   { .offset(3); }
  > .offset4   { .offset(4); }
  > .offset5   { .offset(5); }
  > .offset6   { .offset(6); }
  > .offset7   { .offset(7); }
  > .offset8   { .offset(8); }
  > .offset9   { .offset(9); }
  > .offset10  { .offset(10); }
  > .offset11  { .offset(11); }
  > .offset12  { .offset(12); }
}

// Unique column sizes for 16-column grid
.span-one-third     { width: 300px; }
.span-two-thirds    { width: 620px; }
.row {
  > .offset-one-third   { margin-left: 340px; }
  > .offset-two-thirds  { margin-left: 660px; }
}

// Container (centered, fixed-width layouts)
.container {
  .fixed-container();
  width: 600px;
  > .content {
    background-color: @white;
    padding: 20px;
    margin: 0 -20px;
    .border-radius(0 0 6px 6px);
    .box-shadow(0 1px 2px rgba(0,0,0,.15);
  }
}

.infinitescroll{
  margin:0 auto;
  width: 60%;
}

.item {
  border-bottom:1px solid #ccc;
  padding:10px 0;
  
  > .remove {
    float:right;
    color:#ccc;

    &:hover {
      color:#888;
      text-decoration: none;
    }
  }

  > .title {
    margin-top:10px;
    margin-bottom:5px;
    font-weight:bold;
  }

  > .desc {
    text-align:justify;
  }
}

.loading {
  background:url('../img/loading.gif') no-repeat 0 10px;
  width:20px;
  height:30px;
  margin:0 auto;
}

.modal-footer {
  .error {
    color:@red;
    float:left;
    padding:6px 10px;
    margin:0;
  }
}

footer {
  padding:0;
  border:none;
}
